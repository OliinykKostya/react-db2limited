{"version":3,"sources":["components/Search/Search.js","components/Header/Header.js","utils/pathMap.js","conts/url.js","api.js","components/Spinner/Spinner.js","components/Entities/Entities.js","components/Entities/EntitiesCard.js","components/Details/Details.js","page/404.js","components/Entities/EntitiList.js","components/Entities/LoadEntities.js","page/RootRouter.js","App.js","index.js"],"names":["intervalId","Header","className","to","activeClassName","pathMap","generalUrl","detailFilds","filter","value","fetch","then","response","json","a","getValueByFieldAndPath","path","field","undefined","getDataFromSrver","url","console","log","getDataFromServerByPath","getGeneralUrlByPath","Spinner","role","Character","item","type","useState","data","setData","isLoading","setLoading","history","useHistory","useEffect","onClick","push","pathname","search","encodeURIComponent","CaracterCard","params","useParams","tab","map","length","datainside","Entities","Details","location","useLocation","quary","URLSearchParams","get","EntitiesCard","Page404","Search","onSearch","onChange","e","clearInterval","setTimeout","target","placeholder","SpeciesList","class","replace","LoadEntities","useContext","ContextSearch","results","EntitiList","React","createContext","RootRouter","match","searchData","setSearchData","Provider","exact","component","from","PageNotFound","defaultProps","displayName","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f4d5c23.chunk.js","sourcesContent":["import React from \"react\";\n\nlet intervalId;\n\nconst Search = ({ onSearch }) => {\n\n    const searchHandler = (value) => () => {\n        onSearch(value)\n    }\n\n    const changeHandler = (e) => {\n        clearInterval(intervalId);\n        intervalId = setTimeout(searchHandler(e.target.value), 1000);\n    };\n\n    return (\n        <>\n            <input\n                type=\"text\"\n                onChange={changeHandler}\n                placeholder=\"Search Entities\"\n            />\n        </>\n    )\n}\n\nexport default Search;\n","import React from \"react\"\nimport { NavLink } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <nav className=\"nav header__nav\">\n        <ul className=\"nav justify-content-center\">\n\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/films\"\n              activeClassName=\"nav__link--active\"\n              className=\"nav-link\"\n            >\n              Films\n            </NavLink>\n          </li>\n\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/characters\"\n              activeClassName=\"nav__link--active\"\n              className=\"nav-link\"\n            >\n              Characters\n            </NavLink>\n          </li>\n\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/planets\"\n              activeClassName=\"nav__link--active\"\n              className=\"nav-link\"\n            >\n              Planets\n            </NavLink>\n          </li>\n\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/species\"\n              activeClassName=\"nav__link--active\"\n              className=\"nav-link\"\n            >\n              Species\n            </NavLink>\n          </li>\n\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/starships\"\n              activeClassName=\"nav__link--active\"\n              className=\"nav-link\"\n            >\n              Starships\n            </NavLink>\n          </li>\n\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/vehicles\"\n              activeClassName=\"nav__link--active\"\n              className=\"nav-link\"\n            >\n              Vehicles\n            </NavLink>\n          </li>\n\n        </ul>\n      </nav>\n  </header>\n\n  )\n}\n\nexport default Header;","import { filmsURL, charactersURL, planetsURL, speciesURL, starshipsURL, vehiclesURL } from \"../conts/url\"\n\n\nexport const pathMap = {\n  '/films': {\n    generalUrl: filmsURL,\n    detailFilds: [\n      \"title\",\n      \"episode_id\",\n      \"opening_crawl\",\n      \"director\",\n      \"producer\",\n      \"release_date\",\n      [\"characters\"],\n      [\"planets\"],\n      [\"starships\"],\n      [\"vehicles\"],\n      [\"species\"],\n    ],\n    filter: (value) => {\n      return fetch(`https://swapi.dev/api/films/?search=${value}`)\n        .then(response => response.json())\n    }\n  },\n  '/characters' : {\n    generalUrl: charactersURL,\n    detailFilds: [\n      \"name\",\n      \"height\",\n      \"mass\",\n      \"hair_color\",\n      \"skin_color\",\n      \"eye_color\",\n      \"birth_year\",\n      \"gender\",\n      [\"homeworld\"],\n      [\"films\"],\n      ['species'],\n      [\"starships\"],\n    ],\n    filter: async (value) => {\n      return await fetch(`https://swapi.dev/api/people/?search=${value}`)\n        .then(response => response.json())\n    }\n  },\n  '/people' : {\n    generalUrl: charactersURL,\n    detailFilds: [\n      \"name\",\n      \"height\",\n      \"mass\",\n      \"hair_color\",\n      \"skin_color\",\n      \"eye_color\",\n      \"birth_year\",\n      \"gender\",\n      [\"homeworld\"],\n      [\"films\"],\n      ['species'],\n      [\"starships\"],\n    ],\n    filter: async (value) => {\n      return await fetch(`https://swapi.dev/api/people/?search=${value}`)\n        .then(response => response.json())\n    }\n  },\n  '/pilots' : {\n    generalUrl: charactersURL,\n    detailFilds: [\n      \"name\",\n      \"height\",\n      \"mass\",\n      \"hair_color\",\n      \"skin_color\",\n      \"eye_color\",\n      \"birth_year\",\n      \"gender\",\n      [\"homeworld\"],\n      [\"films\"],\n      ['species'],\n      [\"starships\"],\n    ],\n    filter: async (value) => {\n      return await fetch(`https://swapi.dev/api/people/?search=${value}`)\n        .then(response => response.json())\n    }\n  },\n  '/residents' : {\n    generalUrl: charactersURL,\n    detailFilds: [\n      \"name\",\n      \"height\",\n      \"mass\",\n      \"hair_color\",\n      \"skin_color\",\n      \"eye_color\",\n      \"birth_year\",\n      \"gender\",\n      [\"homeworld\"],\n      [\"films\"],\n      ['species'],\n      [\"starships\"],\n    ],\n    filter: async (value) => {\n      return await fetch(`https://swapi.dev/api/people/?search=${value}`)\n        .then(response => response.json())\n    }\n  },\n  '/planets': {\n    generalUrl: planetsURL,\n    detailFilds: [\n      \"name\",\n      \"rotation_period\",\n      \"orbital_period\",\n      \"diameter\",\n      \"climate\",\n      \"gravity\",\n      \"terrain\",\n      \"surface_water\",\n      \"population\",\n      [\"residents\"],\n      [\"films\"],\n    ],\n    filter: async (value) => {\n      return await fetch(`https://swapi.dev/api/planets/?search=${value}`)\n        .then(response => response.json())\n    }\n  },\n  '/homeworld': {\n    generalUrl: planetsURL,\n    detailFilds: [\n      \"name\",\n      \"rotation_period\",\n      \"orbital_period\",\n      \"diameter\",\n      \"climate\",\n      \"gravity\",\n      \"terrain\",\n      \"surface_water\",\n      \"population\",\n      [\"residents\"],\n      [\"films\"],\n    ],\n    filter: async (value) => {\n      return await fetch(`https://swapi.dev/api/planets/?search=${value}`)\n        .then(response => response.json())\n    }\n  },\n  '/species': {\n    generalUrl: speciesURL,\n    detailFilds: [\n      \"name\",\n      \"classification\",\n      \"designation\",\n      \"average_height\",\n      \"skin_colors\",\n      \"hair_colors\",\n      \"eye_colors\",\n      \"average_lifespan\",\n      [\"homeworld\"],\n      \"language\",\n      [\"people\"],\n      [\"films\"],\n    ],\n    filter: async (value) => {\n      return await fetch(`https://swapi.dev/api/species/?search=${value}`)\n        .then(response => response.json())\n    }\n  },\n  '/starships': {\n    generalUrl: starshipsURL,\n    detailFilds: [\n      \"name\",\n      \"model\",\n      \"manufacturer\",\n      \"cost_in_credits\",\n      \"length\",\n      \"max_atmosphering_speed\",\n      \"crew\",\n      \"passengers\",\n      \"cargo_capacity\",\n      \"consumables\",\n      \"hyperdrive_rating\",\n      \"MGLT\",\n      \"starship_class\",\n      [\"pilots\"],\n      [\"films\"],\n    ],\n    filter: async (value) => {\n      return await fetch(`https://swapi.dev/api/starships/?search=${value}`)\n        .then(response => response.json())\n    }\n  },\n  '/vehicles' : {\n    generalUrl: vehiclesURL,\n    detailFilds: [\n      \"name\",\n      \"model\",\n      \"manufacturer\",\n      \"cost_in_credits\",\n      \"length\",\n      \"max_atmosphering_speed\",\n      \"crew\",\n      \"passengers\",\n      \"cargo_capacity\",\n      \"consumables\",\n      \"vehicle_class\",\n      [\"pilots\"],\n      [\"films\"],\n    ],\n    filter: async (value) => {\n      return await fetch(`https://swapi.dev/api/vehicles/?search=${value}`)\n        .then(response => response.json())\n    }\n  },\n};\n\nconst getValueByFieldAndPath = (path, field) => {\n  if (pathMap[path] === undefined) {\n    return pathMap[path]\n  }\n\n  return pathMap[path][field];\n}\n\nexport const getGeneralUrlByPath = (path) => {\n  return getValueByFieldAndPath(path, \"generalUrl\")\n}\n\nexport const getDetailFildsByPath = (path) => {\n  return getValueByFieldAndPath(path, \"detailFilds\")\n}\n","export const URL = \"https://swapi.dev/api/\"\nexport const filmsURL = \"films/?format=json\"\nexport const charactersURL = \"people/?format=json\"\nexport const planetsURL = \"planets/?format=json\"\nexport const speciesURL = \"species/?format=json\"\nexport const starshipsURL = \"starships/?format=json\"\nexport const vehiclesURL = \"vehicles/?format=json\"","import { pathMap, getGeneralUrlByPath } from \"./utils/pathMap\"\nimport {URL} from \"./conts/url\"\n\nexport const getDataFromSrver = async (url) => {\n  console.log(url)\n  return await fetch(url)\n    .then(response => response.json())\n}\n\nexport const getFilterByPath = (path) => {\n  return pathMap[path].filter;\n};\n\nexport const getDataFromServerByPath = (path) => {\n  return getDataFromSrver(URL + getGeneralUrlByPath(path));\n};","import React from \"react\"\n\nconst Spinner = () => (\n  <div className=\"spinner-border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n  </div>\n)\n\nexport default Spinner\n","import React, { useEffect, useState } from \"react\"\nimport { getDataFromSrver } from \"../../api\"\nimport { useHistory} from \"react-router-dom\"\nimport Spinner from \"../Spinner/Spinner\"\n\nconst Character = ({ item, type} ) => {\n  const [data, setData] = useState([])\n  const [isLoading, setLoading] = useState(false)\n  const history = useHistory();\n\n  useEffect(() => {\n    setLoading(true)\n    getDataFromSrver(item)\n      .then(data => setData(data))\n      setLoading(false)\n  }, [])\n\n  if (isLoading) {\n    return <Spinner/>\n  }\n\n  if (type === undefined) {\n    return \"No Entities \"\n  }\n\n  return (\n    <>\n      <li className=\"list-group-item\" onClick={()=> {\n        history.push({\n          pathname: `/${type}/details`,\n          search: `query=${encodeURIComponent(data.url)}`,\n        })\n      }}>{ data[type === \"films\" ? \"title\" : \"name\"]\n      }</li>\n    </>\n  )\n}\n\nexport default Character;\n","import React from \"react\"\nimport Entities from \"./Entities\";\nimport { useParams } from \"react-router-dom\";\nimport { getDetailFildsByPath } from \"../../utils/pathMap\";\nimport Spinner from \"../Spinner/Spinner\";\n\nconst CaracterCard = ({ item }) => {\n  const params = useParams();\n\n  let field = getDetailFildsByPath(`/${params.tab}`);\n\n  return (\n    <div>\n      {field\n        ? field.map(data => (\n          <>\n            {typeof data === \"object\"\n              ? <>\n                <br></br>\n                {item[data] !== undefined && item[data].length !== 0 && <h1 className=\"p__alight-center\">{data}</h1>}\n                <ul className=\"list-group\">\n                  {typeof item[data] === \"object\" && item[data] != null\n                    ? item[data].map(datainside => (\n                      <Entities item={datainside} type={data[0]} />\n                    ))\n                    : <Entities item={item[data]} type={data[0]} />\n                  }\n                </ul>\n              </>\n              : <p className=\"p__alight-center\"><b className=\"p__alight-center--span\">{data}:</b> {item[data]}</p>\n            }\n          </>\n        ))\n        : <Spinner/>\n      }\n    </div>\n  )\n}\n\nexport default CaracterCard\n","import React, { useState, useEffect } from \"react\"\nimport {  useLocation } from \"react-router-dom\"\nimport { getDataFromSrver } from \"../../api\";\nimport EntitiesCard from \"../Entities/EntitiesCard\";\nimport Spinner from \"../Spinner/Spinner\";\n\n\nconst Details = () => {\n  const location = useLocation();\n  const [data, setData] = useState([])\n  const [isLoading, setLoading] = useState(false)\n  const searchParams = new URLSearchParams(location.search);\n  const quary = searchParams.get('query') || '';\n\n  useEffect(() => {\n    setLoading(true)\n    getDataFromSrver(`${quary}?format=json`)\n      .then(data => {\n        setData(data);\n        setLoading(false)\n      })\n  }, [quary])\n\n  if (isLoading) {\n    return <Spinner/>\n  }\n\n  return <EntitiesCard item={data} />\n}\n\nexport default Details;\n","import React from \"react\";\n\nconst Page404 = () => {\n\n    return (\n        <p>404</p>\n    )\n}\n\nexport default Page404;\n","import React  from \"react\"\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst SpeciesList = ({ data }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  return (\n    <ul class=\"list-group\">\n      {data && data.map(item => (\n        <>\n          <li class=\"list-group-item\" onClick={() => {\n            history.push({\n              pathname: `${location.pathname}/details`,\n              search: `query=${encodeURIComponent(item.url.replace(\"http\", \"https\"))}`,\n              // search: `query=${item.url}`,\n            });\n          }}>{ item[location.pathname === \"/films\" ? \"title\": \"name\"]\n            }</li>\n        </>\n      ))}\n    </ul>\n  )\n}\n\nexport default SpeciesList\n","import React, { useState, useEffect, useContext } from \"react\"\nimport EntitiList from \"../../components/Entities/EntitiList\";\nimport { getDataFromServerByPath, getFilterByPath } from \"../../api\";\nimport { ContextSearch } from \"../../page/RootRouter\";\nimport { useLocation } from \"react-router-dom\";\nimport Spinner from \"../Spinner/Spinner\";\n\n\nconst LoadEntities = ({ location: { pathname } }) => {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setLoading] = useState(false)\n\n\n\n  const location = useLocation();\n  const search = useContext(ContextSearch)\n  // let sort = useContext(ContextSort)\n  // const isSortedAsc = searchParams.get('sortOrder') !== 'desc';\n  const searchParams = new URLSearchParams(location.search);\n  \n\n  useEffect(() => {\n    setLoading(true)\n    const promis = search.length > 0 ? getFilterByPath(pathname)(search) : getDataFromServerByPath(pathname);\n\n    promis.then(response => {\n      setData(response.results)\n      setLoading(false)\n    });\n\n  }, [pathname, search])\n\n\n  if (isLoading) {\n    return <Spinner/>\n  }\n\n  return (\n    <>\n      <EntitiList data={data} />\n    </>\n  )\n}\n\nexport default LoadEntities;\n","import React, { useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Details from '../components/Details/Details';\nimport PageNotFound from './404';\nimport Search from '../components/Search/Search';\nimport LoadEntities from '../components/Entities/LoadEntities';\nimport Button from '../components/Button/Button';\n\nexport const ContextSearch = React.createContext()\nexport const ContextSort = React.createContext()\n\nexport const RootRouter = ({ match: { path }, location: { pathname } }) => {\n\n    const [searchData, setSearchData] = useState([])\n    // const [sortedData, setsortedData] = useState([])\n\n    const onSearch = (value) => {\n        setSearchData(value)\n    }\n\n    // const onSorted = (sortPath) => {\n    //     setsortedData(sortPath)\n    // }\n\n    return (\n        <ContextSearch.Provider value={searchData} >\n                <Search pathname={pathname} onSearch={onSearch} />\n                {/* <Button pathname={pathname} onSorted={onSorted} /> */}\n                <Switch>\n                    <Route path=\"/:tab\" exact component={LoadEntities} />\n                    <Route path=\"/:tab/:details?\" exact component={Details} />\n                    <Redirect from=\"/\" to=\"/films\" />\n                    <Route exact path=\"/404\" component={PageNotFound} />\n                    <Redirect from=\"*\" to=\"/404\" />\n                </Switch>\n        </ContextSearch.Provider>\n    )\n};\n\nRootRouter.propTypes = {\n    match: PropTypes.shape({\n        path: PropTypes.string,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string,\n    }).isRequired,\n};\n\nRootRouter.defaultProps = {};\n\nRootRouter.displayName = 'Router';\n","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { RootRouter } from './page/RootRouter';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <Switch>\n          <Route path=\"/\" component={RootRouter} />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}